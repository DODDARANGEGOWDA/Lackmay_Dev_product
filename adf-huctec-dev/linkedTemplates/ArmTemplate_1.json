{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-huctec-dev"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerDatabaseDynamic",
					"type": "LinkedServiceReference",
					"parameters": {
						"Database": "B7_supplyChainProject"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerDatabaseDynamic",
					"type": "LinkedServiceReference",
					"parameters": {
						"Database": "B7_supplyChainProject"
					}
				},
				"parameters": {
					"TableSchema": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().TableSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable4productS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerDatabaseDynamic",
					"type": "LinkedServiceReference",
					"parameters": {
						"Database": "B7_supplyChainProject"
					}
				},
				"parameters": {
					"Source_Object__Schema": {
						"type": "string"
					},
					"Source_Object_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Source_Object__Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Source_Object_Name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable4productSOne')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerDatabaseDynamic",
					"type": "LinkedServiceReference",
					"parameters": {
						"Database": "B7_supplyChainProject"
					}
				},
				"parameters": {
					"Soures_Object_Schema": {
						"type": "string"
					},
					"Soures_Object_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Soures_Object_Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Soures_Object_Name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTableHPThr')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerDatabaseDynamic",
					"type": "LinkedServiceReference",
					"parameters": {
						"Database": "B7_supplyChainProject"
					}
				},
				"parameters": {
					"Folder": {
						"type": "string"
					},
					"File": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Folder",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().File",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTableHPTwo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerDatabaseDynamic",
					"type": "LinkedServiceReference",
					"parameters": {
						"Database": "B7_supplyChainProject"
					}
				},
				"parameters": {
					"FileSchema": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().FileSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().FileName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTableMarket')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerDatabaseDynamic",
					"type": "LinkedServiceReference",
					"parameters": {
						"Database": "B7_supplyChainProject"
					}
				},
				"parameters": {
					"Sources_Object_Schema": {
						"type": "string"
					},
					"Sources_Object_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Sources_Object_Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Sources_Object_Name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTableVivo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerDatabaseDynamic",
					"type": "LinkedServiceReference",
					"parameters": {
						"Database": "B7_supplyChainProject"
					}
				},
				"parameters": {
					"Source_Object_Schema": {
						"type": "string"
					},
					"Source_Object_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Source_Object_Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Source_Object_Name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTabledelloSchema')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerDatabaseDynamic",
					"type": "LinkedServiceReference",
					"parameters": {
						"Database": "dell"
					}
				},
				"parameters": {
					"S_NAME": {
						"type": "string"
					},
					"T_NAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().S_NAME",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().T_NAME",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_insideForeach_copyActivity_sinkds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "landing-raw-zone"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Dev_Connecting_toAzureSql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupActivityAzureSQlDATABASE",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * FROM [dbo].[controltable] WHERE indicator in (0,1)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ConnectingAzureSqlDatabase",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupActivityAzureSQlDATABASE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupActivityAzureSQlDATABASE').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().Load_Type,'incremental')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Lookup2",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"sqlReaderQuery": {
															"value": "@if(equals(toLower(item().Load_Type), 'incremental'), concat('SELECT MAX(', item().Watermark_column, ') AS Watermark_Value FROM [', item().Source_Object_Schema, '].', item().Source_Object_Name), 'SELECT NULL AS Watermark_Value')",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "SqlServerTableVivo",
														"type": "DatasetReference",
														"parameters": {
															"Source_Object_Schema": {
																"value": "@item().Source_Object_Schema",
																"type": "Expression"
															},
															"Source_Object_Name": {
																"value": "@item().Source_Object_Name",
																"type": "Expression"
															}
														}
													},
													"firstRowOnly": false
												}
											},
											{
												"name": "Copy data1",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Lookup2",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"sqlReaderQuery": {
															"value": "@concat('Select * from ' ,item().Source_Object_Schema,'.',item().Source_Object_Name,' where ',item().watermark_column,'>',item().watermark_value)",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "upsert",
														"upsertSettings": {
															"useTempDB": true,
															"keys": [
																"PO_ID"
															]
														},
														"sqlWriterUseTableLock": false,
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "SqlServerTableVivo",
														"type": "DatasetReference",
														"parameters": {
															"Source_Object_Schema": {
																"value": "@item().Source_Object_Schema",
																"type": "Expression"
															},
															"Source_Object_Name": {
																"value": "@item().Source_Object_Name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "AzureSqlTable2",
														"type": "DatasetReference",
														"parameters": {
															"TABLE_NAME": "newOne"
														}
													}
												]
											},
											{
												"name": "Stored procedure1",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Copy data1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[sp_UpdateWatermark]",
													"storedProcedureParameters": {
														"Source_Object_Name": {
															"value": {
																"value": "@item().Source_Object_Name",
																"type": "Expression"
															},
															"type": "String"
														},
														"Watermark_Column": {
															"value": {
																"value": "@item().watermark_column",
																"type": "Expression"
															},
															"type": "String"
														},
														"Watermark_Value": {
															"value": {
																"value": "@activity('Lookup2').output.value[0].watermark_value",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSqlDatabase1",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTableVivo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Dev_Control_Cloude_To_Cloud')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * FROM [dbo].[controltable]\nWHERE Indicator IN (0,1)\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlCloude_oneHP",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().Load_Type,'incremental')\n",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Copy data2",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "SqlServerTableHPThr",
														"type": "DatasetReference",
														"parameters": {
															"Folder": {
																"value": "@item().Source_Object_Schema",
																"type": "Expression"
															},
															"File": {
																"value": "@item().Source_Object_Name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DelimitedTextHP",
														"type": "DatasetReference",
														"parameters": {
															"Target_Location": {
																"value": "@item().Target_Location",
																"type": "Expression"
															},
															"Target_Object_Name": {
																"value": "@item().Target_Object_Name",
																"type": "Expression"
															}
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "Lookup1",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"sqlReaderQuery": {
															"value": "@if(equals(toLower(item().Load_Type), 'incremental'), concat('SELECT MAX(', item().Watermark_column, ') AS Watermark_Value FROM [', item().Source_Object_Schema, '].', item().Source_Object_Name), 'SELECT NULL AS Watermark_Value')",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "SqlServerTableHPTwo",
														"type": "DatasetReference",
														"parameters": {
															"FileSchema": {
																"value": "@item().Source_Object_Schema",
																"type": "Expression"
															},
															"FileName": "@item().Source_Object_Name"
														}
													},
													"firstRowOnly": false
												}
											},
											{
												"name": "Copy data1",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Lookup1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"sqlReaderQuery": {
															"value": "@concat('Select * from ' ,item().Source_Object_Schema,'.',item().Source_Object_Name,' where ',item().watermark_column,'>',item().watermark_value)",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "SqlServerTableHPThr",
														"type": "DatasetReference",
														"parameters": {
															"Folder": {
																"value": "@item().Source_Object_Schema",
																"type": "Expression"
															},
															"File": {
																"value": "@item().Source_Object_Name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "AzureSqlTablehp",
														"type": "DatasetReference",
														"parameters": {
															"TABLE_NAME": "pursTwo"
														}
													}
												]
											},
											{
												"name": "Stored procedure1",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Copy data1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[sp_UpdateWatermark]",
													"storedProcedureParameters": {
														"Source_Object_Name": {
															"value": {
																"value": "@item().Source_Object_Name",
																"type": "Expression"
															},
															"type": "String"
														},
														"Watermark_Column": {
															"value": {
																"value": "@item().watermark_column",
																"type": "Expression"
															},
															"type": "String"
														},
														"Watermark_Value": {
															"value": {
																"value": "@activity('Lookup1').output.value[0].watermark_value",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSqlDatabase1",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Stored procedure2",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Copy data1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[sp_UpdateLogTable]",
													"storedProcedureParameters": {
														"CopyActivity_End_Time": {
															"value": "@{utcnow()}",
															"type": "String"
														},
														"CopyActivity_queuingDuration_in_secs": {
															"value": "@{activity('Copy data1').output.executionDetails[0].detailedDurations.queuingDuration}",
															"type": "String"
														},
														"CopyActivity_Start_Time": {
															"value": "@{activity('Copy data1').output.executionDetails[0].start}",
															"type": "String"
														},
														"CopyActivity_transferDuration_in_secs": {
															"value": "@{activity('Copy data1').output.copyDuration}",
															"type": "String"
														},
														"copyDuration_in_secs": {
															"value": "@{activity('Copy data1').output.copyDuration}",
															"type": "String"
														},
														"DataFactory_Name": {
															"value": "@{pipeline().DataFactory}",
															"type": "String"
														},
														"DataRead": {
															"value": "@{activity('Copy data1').output.dataRead}",
															"type": "Int32"
														},
														"Destination": {
															"value": "@{item().Target_Object_Name}",
															"type": "String"
														},
														"effectiveIntegrationRuntime": {
															"value": "@{activity('Copy data1').output.effectiveIntegrationRuntime}",
															"type": "String"
														},
														"Execution_Status": {
															"value": "@{activity('Copy data1').output.executionDetails[0].status}",
															"type": "String"
														},
														"Pipeline_Name": {
															"value": "@{pipeline().Pipeline}",
															"type": "String"
														},
														"rowsCopied": {
															"value": "@{activity('Copy data1').output.rowsCopied}",
															"type": "String"
														},
														"RunID": {
															"value": "@pipeline().RunId",
															"type": "String"
														},
														"Sink_Type": {
															"value": "@{activity('Copy data1').output.executionDetails[0].sink.type}",
															"type": "String"
														},
														"Source": {
															"value": "@{item().Source_System_Name}",
															"type": "String"
														},
														"Source_Type": {
															"value": "@{activity('Copy data1').output.executionDetails[0].source}",
															"type": "String"
														},
														"TriggerId": {
															"value": "@{pipeline().TriggerId}",
															"type": "String"
														},
														"TriggerName": {
															"value": "@{pipeline().TriggerName}",
															"type": "String"
														},
														"TriggerTime": {
															"value": "@{pipeline().TriggerTime}",
															"type": "String"
														},
														"TriggerType": {
															"value": "@{pipeline().TriggerType}",
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSqlDatabase1",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Stored procedure3",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Copy data1",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[sp_UpdateErrorTable]",
													"storedProcedureParameters": {
														"copyDuration_in_secs": {
															"value": "@{activity('Copy data1').output.copyDuration}",
															"type": "String"
														},
														"DataFactory_Name": {
															"value": "@{pipeline().DataFactory}",
															"type": "String"
														},
														"Destination": {
															"value": "@{item().Target_Object_Name}",
															"type": "String"
														},
														"effectiveIntegrationRuntime": {
															"value": "@{activity('Copy data1').output.effectiveIntegrationRuntime}",
															"type": "String"
														},
														"ErrorCode": {
															"value": "@{activity('Copy data1').output.error.errorCode}",
															"type": "String"
														},
														"ErrorDescription": {
															"value": "@{activity('Copy data1').error.message}",
															"type": "String"
														},
														"ErrorLoggedTime": {
															"value": "@utcNow()",
															"type": "String"
														},
														"Execution_Status": {
															"value": "@{activity('Copy data1').output.executionDetails[0].status}",
															"type": "String"
														},
														"FailureType": {
															"value": "@{concat(activity('Copy data1').error.message,'failureType:',activity('Copy data1').error.failureType)}",
															"type": "String"
														},
														"Pipeline_Name": {
															"value": "@pipeline().Pipeline",
															"type": "String"
														},
														"RunId": {
															"value": "@pipeline().RunId",
															"type": "String"
														},
														"Sink_Type": {
															"value": "@{activity('Copy data1').output.executionDetails[0].sink.type}",
															"type": "String"
														},
														"Source": {
															"value": "@{item().Source_System_Name}",
															"type": "String"
														},
														"Source_Type": {
															"value": "@{activity('Copy data1').output.executionDetails[0].source}",
															"type": "String"
														},
														"TriggerId": {
															"value": "@{pipeline().TriggerId}",
															"type": "String"
														},
														"TriggerName": {
															"value": "@{pipeline().TriggerName}",
															"type": "String"
														},
														"TriggerTime": {
															"value": "@{pipeline().TriggerTime}",
															"type": "String"
														},
														"TriggerType": {
															"value": "@{pipeline().TriggerType}",
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSqlDatabase1",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTableHPThr')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTableHPTwo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Dev_Schema_Saparation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT * FROM INFORMATION_SCHEMA.TABLES ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTableVivo",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerTabledelloSchema",
											"type": "DatasetReference",
											"parameters": {
												"S_NAME": {
													"value": "@item().TABLE_SCHEMA",
													"type": "Expression"
												},
												"T_NAME": {
													"value": "@item().TABLE_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DelimitedTextdellSinkdataset",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": {
													"value": "@item().TABLE_SCHEMA",
													"type": "Expression"
												},
												"table_name": {
													"value": "@item().TABLE_name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTableVivo')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTabledelloSchema')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Dev_productS_Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * FROM [dbo].[controltable] WHERE Indicator IN (0,1)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTableproductS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().Load_Type,'full_load')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Lookup2",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"sqlReaderQuery": {
															"value": "@if(equals(toLower(item().Load_Type), 'incremental'), concat('SELECT MAX(', item().Watermark_column, ') AS Watermark_Value FROM [', item().Source_Object_Schema, '].', item().Source_Object_Name), 'SELECT NULL AS Watermark_Value')",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "SqlServerTable4productS",
														"type": "DatasetReference",
														"parameters": {
															"Source_Object__Schema": {
																"value": "@item().Source_Object_Schema",
																"type": "Expression"
															},
															"Source_Object_Name": {
																"value": "@item().Source_Object_Name",
																"type": "Expression"
															}
														}
													},
													"firstRowOnly": false
												}
											},
											{
												"name": "Copy data1",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Lookup2",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"sqlReaderQuery": {
															"value": "@concat('Select * from ' ,item().Source_Object_Schema,'.',item().Source_Object_Name,' where ',item().watermark_column,'>',item().watermark_value)",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "upsert",
														"upsertSettings": {
															"useTempDB": true,
															"keys": [
																"route_id"
															]
														},
														"sqlWriterUseTableLock": false,
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "SqlServerTable4productSOne",
														"type": "DatasetReference",
														"parameters": {
															"Soures_Object_Schema": {
																"value": "@item().Source_Object_Schema",
																"type": "Expression"
															},
															"Soures_Object_Name": {
																"value": "@item().Source_Object_Name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "AzureSqlTableProductsone",
														"type": "DatasetReference",
														"parameters": {
															"Table_Name": "routeon"
														}
													}
												]
											},
											{
												"name": "Stored procedure1",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Copy data1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[sp_UpdateWatermark]",
													"storedProcedureParameters": {
														"Source_Object_Name": {
															"value": {
																"value": "@item().Source_Object_Name",
																"type": "Expression"
															},
															"type": "String"
														},
														"Watermark_Column": {
															"value": {
																"value": "@item().watermark_column",
																"type": "Expression"
															},
															"type": "String"
														},
														"Watermark_Value_One": {
															"value": {
																"value": "@activity('Lookup2').output.value[0].watermark_valueOne",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSqlDatabase1",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable4productS')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable4productSOne')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_OnPrimettoCloud_Migration_load_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"description": "",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='dbo'\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerTable3",
											"type": "DatasetReference",
											"parameters": {
												"TableSchema": {
													"value": "@item().TABLE_SCHEMA",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_insideForeach_copyActivity_sinkds",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable2')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable3')]",
				"[concat(variables('factoryId'), '/datasets/ds_insideForeach_copyActivity_sinkds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pl_Dev_Market_LoadToCloud')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * FROM [dbo].[controltable]\nWHERE Indicator IN (0)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTableMarket",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().Load_Type,'incremental')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Lookup2",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"sqlReaderQuery": {
															"value": "@if(equals(toLower(item().Load_Type), 'incremental'), concat('SELECT MAX(', item().Watermark_column, ') AS Watermark_Value FROM [', item().Source_Object_Schema, '].', item().Source_Object_Name), 'SELECT NULL AS Watermark_Value')",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "SqlServerTable1",
														"type": "DatasetReference",
														"parameters": {
															"Sources_Object_Schema": {
																"value": "@item().Source_Object_Schema",
																"type": "Expression"
															},
															"Sources_Object_Name": {
																"value": "@item().Source_Object_Name",
																"type": "Expression"
															}
														}
													},
													"firstRowOnly": false
												}
											},
											{
												"name": "Copy data1",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Lookup2",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"sqlReaderQuery": {
															"value": "@concat('Select * from ' ,item().Source_Object_Schema,'.',item().Source_Object_Name,' where ',item().watermark_column,'>',item().watermark_value)",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "upsert",
														"upsertSettings": {
															"useTempDB": true,
															"keys": [
																"Market_id"
															]
														},
														"sqlWriterUseTableLock": false,
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "SqlServerTableMarket",
														"type": "DatasetReference",
														"parameters": {
															"Sources_Object_Schema": {
																"value": "@item().Source_Object_Schema",
																"type": "Expression"
															},
															"Sources_Object_Name": {
																"value": "@item().Source_Object_Name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "AzureSqlTableMarketsql",
														"type": "DatasetReference",
														"parameters": {
															"Table_Name": "MarketOne"
														}
													}
												]
											},
											{
												"name": "Stored procedure1",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Copy data1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[sp_UpdateWatermark]",
													"storedProcedureParameters": {
														"Source_Object_Name": {
															"value": {
																"value": "@item().Source_Object_Name",
																"type": "Expression"
															},
															"type": "String"
														},
														"Watermark_Column": {
															"value": {
																"value": "@item().watermark_column",
																"type": "Expression"
															},
															"type": "String"
														},
														"Watermark_Value": {
															"value": {
																"value": "@activity('Lookup2').output.value[0].watermark_value",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSqlDatabase1",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTableMarket')]"
			]
		}
	]
}