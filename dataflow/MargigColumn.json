{
	"name": "MargigColumn",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "productS"
				},
				{
					"dataset": {
						"referenceName": "purchaseorder",
						"type": "DatasetReference"
					},
					"name": "purchaseorder"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          P_ID as string,",
				"          Product_type as string,",
				"          Price as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> productS",
				"source(output(",
				"          PO_ID as string,",
				"          P_ID as string,",
				"          Availability as string,",
				"          Number_of_products_sold as string,",
				"          Revenue_generated as string,",
				"          Stock_levels as string,",
				"          Lead_times as string,",
				"          Order_quantities as string,",
				"          Shipping_times as string,",
				"          Shipping_carriers as string,",
				"          Shipping_costs as string,",
				"          Supplier_Id as string,",
				"          Lead_time as string,",
				"          Production_volumes as string,",
				"          Manufacturing_lead_time as string,",
				"          Manufacturing_costs as string,",
				"          Inspection_results as string,",
				"          Defect_rates as string,",
				"          Transportation_id as string,",
				"          Costs as string,",
				"          route_id as string,",
				"          LastUpdateDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> purchaseorder",
				"purchaseorder, productS join(purchaseorder@P_ID == productS@P_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     partitionBy('hash', 1),",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          PO_ID,",
				"          P_ID = purchaseorder@P_ID,",
				"          Product_type",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     format: 'table') ~> sink1"
			]
		}
	}
}